
While a typeface is a set of design features for letters and other characters, a font is the variation in weight and size of a typeface.
A font family is a group of related fonts.

=========================================================================================================

Typography is how text is arranged within a design
It’s the process of working out how to make the text fit in an aesthetically pleasing way that doesn’t compromise its legibility.
With typography, the designer isn’t designing the actual letters, they’re working with existing typefaces and fonts.

To create a text-based design using typography, a designer chooses the right font in a size that will fit the piece, 
then make other tweaks like the spacing between the letters and the scale between capital and lowercase letters to create their piece.

=========================================================================================================


Use font-family to change the typeface of your text.

The font-family property accepts a comma-separated list of strings, either referring to specific or generic font families.
Specific font families are quoted strings, such as “Helvetica”, “EB Garamond”, or “Times New Roman”.
Generic font families are keywords such as serif, sans-serif, and monospace (find the full list of options on MDN).
https://developer.mozilla.org/en-US/docs/Web/CSS/font-family#values
The browser will display the first available typeface from the provided list.

When the browser chooses which font to display from your font-family declaration, it doesn’t stop at the first available font in the list.
Instead, it selects fonts one character at a time. If a particular character isn’t available in the first font in the list, it moves on to the next,
and so on.

When using font-family, you should specify at least one generic font family in case the user’s browser doesn’t have your preferred fonts.
Generally, the fallback generic font family should be similar to your preferred fonts: if using font-family: "Helvetica" (a sans-serif font family),
your fallback should be sans-serif to match.


=========================================================================================================


Use italic and oblique fonts #

Use font-style to set whether text should be italic or not. font-style accepts one of the following keywords: normal, italic, and oblique.

Q: What’s the difference between italic and oblique? A: In fonts that support it, font-style: italic is typically a cursive version of the regular 
typeface. font-style: oblique displays a slanted version of regular typeface.

=========================================================================================================

Make text bold #

Use font-weight to set the “boldness” of text. This property accepts keyword values (normal, bold), relative keyword values (lighter, bolder), 
and numeric values (100 to 900).

The keywords normal and bold are equivalent to the numeric values 400 and 700, respectively.

The keywords lighter and bolder are calculated relative to the parent element. 


Most fonts, especially the "web-safe" ones, only support the weights 400 (normal) and 700 (bold). When importing fonts using @font-face or 
@import, you can choose specific weights you want to pull in.
Still, non-variable fonts only support numeric values for font-weight in the 100s, e.g. 100, 200, 300, etc.
If you want to use font-weight: 321 (for example), you’ll have to use a Variable Font.



=========================================================================================================

Change the size of text #

Use font-size to control the size of your text elements. This property accepts length values, percentages, and a handful of keyword values.

In addition to length and percentage values, font-size accepts some absolute keyword values (xx-small, x-small, small, medium, large, x-large, xx-large) 
and a couple of relative keyword values (smaller, larger). The relative values are relative to the parent element’s font-size.

Q: What’s the difference between em and rem? A: In CSS, em represents the font-size inherited from the element’s parent. For example,
font-size: 2em is equivalent to the parent’s font-size multiplied by two. rem is similar, but instead represents the font-size inherited from 
the root element, i.e. <html>.

=========================================================================================================

Change the space between lines #

Use line-height to specify the height of each line in an element. This property accepts either a number, length, percentage, or the keyword normal.
Generally, it’s recommended to use a number instead of a length or percentage to avoid issues with inheritance.


=========================================================================================================

Change the space between characters #

Use letter-spacing to control the amount of horizontal space between characters in your text. This property accepts length values such as em, px, and rem.

Note that the specified value increases the amount of natural space between characters.

=========================================================================================================

Change the space between words #

Use word-spacing to increase or decrease the length of space between each word in your text.
This property accepts length values such as em, px, and rem. Note that the length you specify is for extra space in addition to the normal spacing.
This means that word-spacing: 0 is equivalent to word-spacing: normal.

=========================================================================================================

Change the case of text #

Use text-transform to modify the capitalization of your text without needing to change the underlying HTML.
This property accepts the following keyword values: uppercase, lowercase, and capitalize.

=========================================================================================================

Add underlines, overlines, and through-lines to text #

Use text-decoration to add lines to your text. Underlines are most commonly used, but it’s possible to add lines above your text or right through it!

The text-decoration property is shorthand for the more specific properties detailed below.

The text-decoration-line property accepts the keywords underline, overline, and line-through.
You can also specify multiple keywords for multiple lines.

.a {
  text-decoration-line: underline;
  text-decoration-color: coral;
}

.b {
  text-decoration-line: line-through;
  text-decoration-color: slateblue;
}

.c {
  text-decoration-line: overline;
  text-decoration-color: lime;
}

.d {
  text-decoration-line: underline overline line-through;
  text-decoration-color: aqua;
}



The text-decoration-style property accepts the keywords solid, double, dotted, dashed, and wavy.

.a {
  text-decoration-style: double;
}

.b {
  text-decoration-style: wavy;
}

.c {
  text-decoration-style: dotted;
}

.d {
  text-decoration-style: dashed;
}



The text-decoration-thickness property accepts any length values and sets the stroke width of all decorations from text-decoration-line.

.a {
  text-decoration-thickness: 2px;
}

.b {
  text-decoration-thickness: 0.2em;
}

.c {
  /* Thickness as percentage of 1em; e.g. 10% == 0.1em */
  text-decoration-thickness: 30%;
}



Use text-underline-position to offset the underline of a text-decoration: underline by the specified amount.
This property doesn’t work for overline or line-through.

=========================================================================================================

Add an indent to your text #


Use text-indent to add an indent to your blocks of text.
This property takes either a length (for example, 10px, 2em) or a percentage of the containing block’s width.

=========================================================================================================

Deal with overflowing or hidden content #

Use text-overflow to specify how hidden content is represented.
There are two options: clip (the default), which truncates the text at the point of overflow; and ellipsis, which displays an ellipsis (…) 
at the point of overflow.


=========================================================================================================

Control white-space #

The white-space property is used to specify how whitespace in an element should be handled.
For more details, check out the white-space article on MDN.
https://developer.mozilla.org/en-US/docs/Web/CSS/white-space



=========================================================================================================


Control how words break #

Use word-break to change how words should be “broken” when they would overflow the line. 
By default, the browser will not split words. Using the keyword value break-all for word-break will instruct the browser to break words at 
individual characters if necessary.

=========================================================================================================

Change text alignment #

Use text-align to specify the horizontal alignment of text in a block or table-cell element. This property accepts the keyword values left, right, start, end, center, justify, and 
match-parent.

The value of justify organizes the text and changes word spacings automatically so that the text lines up with both the left and right edges of the block.

.align-left {
  text-align: left;
}

.align-right {
  text-align: right;
}

.align-start {
  text-align: start;
}

.align-end {
  text-align: end;
}

.align-center {
  text-align: center;
}

.align-justify {
  text-align: justify;
}

=========================================================================================================

Change the direction of text #

Use direction to set the direction of your text, either ltr (left to right, the default) or rtl (right to left).
Some languages like Arabic, Hebrew, or Persian are written right to left, so direction: rtl should be used.
For English and all other left-to-right languages, use direction: ltr.


Caution

Generally, you should favor using the HTML attribute dir instead of direction. Check out this StackOverflow discussion for more details.
https://stackoverflow.com/questions/5375799/direction-ltr-rtl-whats-the-difference-between-the-css-direction-and-html-di/5375907#5375907


=========================================================================================================

Change the flow of text #

Use writing-mode to change the way text flows and is arranged.
The default is horizontal-tb, but you can also set writing-mode to vertical-lr or vertical-rl for text that you want to flow horizontally.

=========================================================================================================

Change the orientation of text #

Use text-orientation to specify the orientation of characters in your text.
The valid values for this property are mixed and upright.
This property is only relevant when writing-mode is set to something other than horizontal-tb.


=========================================================================================================


Add a shadow to text #

Use text-shadow to add a shadow to your text. This property expects three lengths (x-offset, y-offset, and blur-radius) and a color.




=========================================================================================================


Variable fonts #

Typically, “normal” fonts require importing different files for different versions of the typeface, e.g. bold, italic, or condensed. 
Variable fonts are fonts that can contain many different variants of a typeface in one file.

https://web.dev/variable-fonts/


=========================================================================================================


font-variant #

The font-variant property is a shorthand for a number of CSS properties that let you choose font variants like small-caps and slashed-zero.
The CSS properties this shorthand includes are font-variant-alternates, font-variant-caps, font-variant-east-asian, font-variant-ligatures, and 
font-variant-numeric.


